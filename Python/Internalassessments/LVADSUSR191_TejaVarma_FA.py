# -*- coding: utf-8 -*-
"""FApython

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1iKN2-gyjid01wwLtr1TbeotCozaGmIpd
"""

# cricket data

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# 1 loading the dataset from the github link
cricketdata = pd.read_csv('https://raw.githubusercontent.com/Deepsphere-AI/LVA-Batch5-Assessment/main/Final%20Dataset%20-%20IPL.csv')

print(type(cricketdata))
print('\n')
cricketdata.shape # prints the no of rows and columns
#cricketdata
#cricketdata.head()
#cricketdata.tail()

#2 check and handle the missing values
df = pd.DataFrame(cricketdata)

#df_m = pd.DataFrame(cricketdata, na.value=['na','NaN'])
df.isnull()  # checks if there is any NULL values then gives TRUE
#missing values , there are no missing values in the given data

df.drop_duplicates() # dropping the duplicate values
# no duplicate values exist in the dataset so 0 rows are dropped

#3 mean,median,mode,range,variance,standard deviation

# here we are considering for few of the numerical data rows such as FIRST INNINGS SCORE, SECOND INNINGS SCORE AND by what MARGIN they won.

#FIRST INNINGS SCORE
print("The mean of first innings score is : ", df['first_ings_score'].mean())
print("The median of first innings score is : ", df['first_ings_score'].median())
print("The variance of first innings score is : ", df['first_ings_score'].var())
print("The standard deviation of first innings score is : ", df['first_ings_score'].std())
print("The mode of first innings score is : ", df['first_ings_score'].mode())


# SECOND INNINGS SCORE

print("The mean of second innings score : ", df['second_ings_score'].mean())
print("The median of second innings score : ", df['second_ings_score'].median())
print("The variance of second innings score : ", df['second_ings_score'].var())
print("The standard deviation of second innings score : ", df['second_ings_score'].std())
print("The mode of second innings score : ", df['second_ings_score'].mode())

#4 Data Visualisation (histogram, scatter plot, boxplot, bar charts, pie charts)

#scatterplot b/w first innings and second innings

f_innings = df['first_ings_score']
s_innings = df['second_ings_score']
righttoss = df[['toss_winner','match_winner']]

#plt.bar(f_innings, s_innings)
plt.scatter(f_innings, s_innings) # the scores are plotted agains the scatter plot

plt.xlabel('First inning scores')
plt.ylabel('Second inning Scores')
plt.title('Comparison of first and second batting')
plt.grid()
# toss decision of toss winner and match result

f_wickets = df['first_ings_wkts']
s_wickets = df['second_ings_wkts']

plt.scatter(f_wickets,s_wickets)
plt.xlabel('First inning wickets')
plt.ylabel('Second inning wickets')
plt.title('Wickets across first and second innings')
plt.grid()

# 5 correlation btwn the data
# different match conditions like toss decisions, innings score or venue impact match outcomes

df_2 = df.groupby('won_by').value_counts()
print(df.groupby('won_by')['won_by'].value_counts()) # denotes how many matches won by (how many) runs and by (how many) wickets


df_3 = df['margin'].mean()
print("The mean of the margin is : ", df_3)

# 6 outlier detection

#outlier is some abnormal data point in the data set. It is not useful when it comes to statistical analysis and it can be discarded in few cases
# the outliers can be determined by the box plot.

sns.boxplot(df['first_ings_score'])

# 7 compare team and individual performances across different matches and venues

df_2 = df[['match_winner','venue']]
df_2.groupby('match_winner').value_counts() # the team performances are analysed across different teams in different venues.

# 8 focus on key player performances  'Player of the match' , assess the impact of top scorers and best bowlers on their team success

key_player = df['player_of_the_match']
top_scorers = df['top_scorer']
best_bowlers = df['best_bowling']
print(key_player.value_counts().head(5)) # shows the most player with player of matches\
print('\n')
print(top_scorers.value_counts().head(5))  # shows the top scorers in a match
print('\n')
best_bowlers.value_counts().head(5) # shows the best bowlers in a match

"""#9 Summary of the dataset

From the given IPL Dataset, we can analyse multiple trends from it.

1. The match outcomes of winning and losing are equal in both the first innings and second innings as both the half of the teams that batted first won and other half of the matches are won by teams with second batting.

2. From the batting trends in the matches we can say that the scores each of the innings are above the 160. (From the scatter plot)

3. Based on the analysis, the most valuable player of the season is 'Kuldeep Yadav' with 4 player of the match awards.
The top scorer is "Jos Butler" and the top bowler is "Yuzvendra Chahal"
"""
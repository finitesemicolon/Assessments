# -*- coding: utf-8 -*-
"""LVADSUSR191_TejaVarma_fa_Regression

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1VctacJZy10GWfW2HqRiGZPvJ41Fzcqre
"""

import numpy as np
import pandas as pd
import re
import seaborn as sns
import matplotlib.pyplot as plt
import warnings
from sklearn.tree import export_graphviz
from sklearn.impute import KNNImputer
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler, MinMaxScaler
from sklearn.preprocessing import OneHotEncoder, LabelEncoder
from imblearn.over_sampling import SMOTE
from sklearn.linear_model import LinearRegression, LogisticRegression
from sklearn.neighbors import KNeighborsClassifier
from sklearn.tree import DecisionTreeClassifier, plot_tree
from sklearn.ensemble import RandomForestClassifier, BaggingClassifier, GradientBoostingClassifier, IsolationForest
from sklearn.model_selection import cross_val_score
from xgboost import XGBClassifier
import xgboost
from lightgbm import LGBMClassifier
from sklearn.model_selection import GridSearchCV, RandomizedSearchCV
from sklearn.cluster import KMeans, DBSCAN
from sklearn.metrics import confusion_matrix, classification_report, f1_score, roc_curve, roc_auc_score, precision_recall_curve, auc, r2_score, mean_squared_error, accuracy_score, recall_score, silhouette_score, silhouette_samples
warnings.filterwarnings('ignore')

df =pd.read_csv('https://raw.githubusercontent.com/Deepsphere-AI/LVA-Batch5-Assessment/main/Fare%20prediction.csv')

df.head()

df.info()

df.shape # shape of data

df.isnull().sum() # checking null values in the data
# no null values in the dataset

df.duplicated().sum() # checking duplicates------- none found

# converting datetime to some exploratoray analysis part
# further based on the EDA we can further classify the columns into Region based on UTC timestamp and the seasons based on the months.

#df['date']=pd.to_datetime(df['pickup_datetime'].date)
#df['year']=pd.to_datetime(df['pickup_datetime'].year)
#df['month']=pd.to_datetime(df['pickup_datetime'].month)

y = df['fare_amount']
x = df.drop('fare_amount',axis= 1,inplace = True)

# train test splitting

model = LinearRegression() #model creation and then fit transforming it.
x_train,x_test,y_train,y_test =train_test_split(x,y, test_size = 0.2)
y_pred = model.transform(y_test)

y_pred[:] # printing some y values

#evaluation metrics

print("Accuracy : ",accuracy_score)
print("Precision : ",precision_score)
print("Recall : ",recall_score)
print("F1_score : ",f1_score)